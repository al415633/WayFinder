// Mocks generated by Mockito 5.4.4 from annotations
// in WayFinder/test/integration_tests/R4_Itest.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:firebase_auth/firebase_auth.dart' as _i4;
import 'package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart'
    as _i3;
import 'package:firebase_core/firebase_core.dart' as _i2;
import 'package:latlong2/latlong.dart' as _i10;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;
import 'package:WayFinder/model/location.dart' as _i12;
import 'package:WayFinder/model/route.dart' as _i6;
import 'package:WayFinder/model/routeMode.dart' as _i9;
import 'package:WayFinder/model/transportMode.dart' as _i11;
import 'package:WayFinder/model/UserApp.dart' as _i15;
import 'package:WayFinder/model/vehicle.dart' as _i13;
import 'package:WayFinder/viewModel/ElectricCarPrice.dart' as _i17;
import 'package:WayFinder/viewModel/LocationController.dart' as _i16;
import 'package:WayFinder/viewModel/RouteController.dart' as _i5;
import 'package:WayFinder/viewModel/UserAppController.dart' as _i14;
import 'package:WayFinder/viewModel/VehicleController.dart' as _i18;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseApp_0 extends _i1.SmartFake implements _i2.FirebaseApp {
  _FakeFirebaseApp_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeActionCodeInfo_1 extends _i1.SmartFake
    implements _i3.ActionCodeInfo {
  _FakeActionCodeInfo_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserCredential_2 extends _i1.SmartFake
    implements _i4.UserCredential {
  _FakeUserCredential_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfirmationResult_3 extends _i1.SmartFake
    implements _i4.ConfirmationResult {
  _FakeConfirmationResult_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDbAdapterRoute_4 extends _i1.SmartFake
    implements _i5.DbAdapterRoute {
  _FakeDbAdapterRoute_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRoutes_5 extends _i1.SmartFake implements _i6.Routes {
  _FakeRoutes_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FirebaseAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuth extends _i1.Mock implements _i4.FirebaseAuth {
  @override
  _i2.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
        returnValueForMissingStub: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
      ) as _i2.FirebaseApp);

  @override
  set app(_i2.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set tenantId(String? tenantId) => super.noSuchMethod(
        Invocation.setter(
          #tenantId,
          tenantId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set customAuthDomain(String? customAuthDomain) => super.noSuchMethod(
        Invocation.setter(
          #customAuthDomain,
          customAuthDomain,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  _i7.Future<void> useAuthEmulator(
    String? host,
    int? port, {
    bool? automaticHostMapping = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #useAuthEmulator,
          [
            host,
            port,
          ],
          {#automaticHostMapping: automaticHostMapping},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> applyActionCode(String? code) => (super.noSuchMethod(
        Invocation.method(
          #applyActionCode,
          [code],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i3.ActionCodeInfo> checkActionCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkActionCode,
          [code],
        ),
        returnValue: _i7.Future<_i3.ActionCodeInfo>.value(_FakeActionCodeInfo_1(
          this,
          Invocation.method(
            #checkActionCode,
            [code],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.ActionCodeInfo>.value(_FakeActionCodeInfo_1(
          this,
          Invocation.method(
            #checkActionCode,
            [code],
          ),
        )),
      ) as _i7.Future<_i3.ActionCodeInfo>);

  @override
  _i7.Future<void> confirmPasswordReset({
    required String? code,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmPasswordReset,
          [],
          {
            #code: code,
            #newPassword: newPassword,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i4.UserCredential> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<List<String>> fetchSignInMethodsForEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSignInMethodsForEmail,
          [email],
        ),
        returnValue: _i7.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i7.Future<List<String>>.value(<String>[]),
      ) as _i7.Future<List<String>>);

  @override
  _i7.Future<_i4.UserCredential> getRedirectResult() => (super.noSuchMethod(
        Invocation.method(
          #getRedirectResult,
          [],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #getRedirectResult,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #getRedirectResult,
            [],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  bool isSignInWithEmailLink(String? emailLink) => (super.noSuchMethod(
        Invocation.method(
          #isSignInWithEmailLink,
          [emailLink],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i7.Stream<_i4.User?> authStateChanges() => (super.noSuchMethod(
        Invocation.method(
          #authStateChanges,
          [],
        ),
        returnValue: _i7.Stream<_i4.User?>.empty(),
        returnValueForMissingStub: _i7.Stream<_i4.User?>.empty(),
      ) as _i7.Stream<_i4.User?>);

  @override
  _i7.Stream<_i4.User?> idTokenChanges() => (super.noSuchMethod(
        Invocation.method(
          #idTokenChanges,
          [],
        ),
        returnValue: _i7.Stream<_i4.User?>.empty(),
        returnValueForMissingStub: _i7.Stream<_i4.User?>.empty(),
      ) as _i7.Stream<_i4.User?>);

  @override
  _i7.Stream<_i4.User?> userChanges() => (super.noSuchMethod(
        Invocation.method(
          #userChanges,
          [],
        ),
        returnValue: _i7.Stream<_i4.User?>.empty(),
        returnValueForMissingStub: _i7.Stream<_i4.User?>.empty(),
      ) as _i7.Stream<_i4.User?>);

  @override
  _i7.Future<void> sendPasswordResetEmail({
    required String? email,
    _i3.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendPasswordResetEmail,
          [],
          {
            #email: email,
            #actionCodeSettings: actionCodeSettings,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> sendSignInLinkToEmail({
    required String? email,
    required _i3.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendSignInLinkToEmail,
          [],
          {
            #email: email,
            #actionCodeSettings: actionCodeSettings,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setLanguageCode(String? languageCode) => (super.noSuchMethod(
        Invocation.method(
          #setLanguageCode,
          [languageCode],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setSettings({
    bool? appVerificationDisabledForTesting = false,
    String? userAccessGroup,
    String? phoneNumber,
    String? smsCode,
    bool? forceRecaptchaFlow,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSettings,
          [],
          {
            #appVerificationDisabledForTesting:
                appVerificationDisabledForTesting,
            #userAccessGroup: userAccessGroup,
            #phoneNumber: phoneNumber,
            #smsCode: smsCode,
            #forceRecaptchaFlow: forceRecaptchaFlow,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setPersistence(_i3.Persistence? persistence) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPersistence,
          [persistence],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i4.UserCredential> signInAnonymously() => (super.noSuchMethod(
        Invocation.method(
          #signInAnonymously,
          [],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signInWithCredential(
          _i3.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCredential,
          [credential],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithCredential,
            [credential],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithCredential,
            [credential],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signInWithCustomToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCustomToken,
          [token],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithCustomToken,
            [token],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithCustomToken,
            [token],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signInWithEmailLink({
    required String? email,
    required String? emailLink,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailLink,
          [],
          {
            #email: email,
            #emailLink: emailLink,
          },
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithEmailLink,
            [],
            {
              #email: email,
              #emailLink: emailLink,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithEmailLink,
            [],
            {
              #email: email,
              #emailLink: emailLink,
            },
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signInWithProvider(
          _i3.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithProvider,
          [provider],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithProvider,
            [provider],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.ConfirmationResult> signInWithPhoneNumber(
    String? phoneNumber, [
    _i4.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPhoneNumber,
          [
            phoneNumber,
            verifier,
          ],
        ),
        returnValue:
            _i7.Future<_i4.ConfirmationResult>.value(_FakeConfirmationResult_3(
          this,
          Invocation.method(
            #signInWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.ConfirmationResult>.value(_FakeConfirmationResult_3(
          this,
          Invocation.method(
            #signInWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
      ) as _i7.Future<_i4.ConfirmationResult>);

  @override
  _i7.Future<_i4.UserCredential> signInWithPopup(_i3.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPopup,
          [provider],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithPopup,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithPopup,
            [provider],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<void> signInWithRedirect(_i3.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithRedirect,
          [provider],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<String> verifyPasswordResetCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPasswordResetCode,
          [code],
        ),
        returnValue: _i7.Future<String>.value(_i8.dummyValue<String>(
          this,
          Invocation.method(
            #verifyPasswordResetCode,
            [code],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<String>.value(_i8.dummyValue<String>(
          this,
          Invocation.method(
            #verifyPasswordResetCode,
            [code],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<void> verifyPhoneNumber({
    String? phoneNumber,
    _i3.PhoneMultiFactorInfo? multiFactorInfo,
    required _i3.PhoneVerificationCompleted? verificationCompleted,
    required _i3.PhoneVerificationFailed? verificationFailed,
    required _i3.PhoneCodeSent? codeSent,
    required _i3.PhoneCodeAutoRetrievalTimeout? codeAutoRetrievalTimeout,
    String? autoRetrievedSmsCodeForTesting,
    Duration? timeout = const Duration(seconds: 30),
    int? forceResendingToken,
    _i3.MultiFactorSession? multiFactorSession,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPhoneNumber,
          [],
          {
            #phoneNumber: phoneNumber,
            #multiFactorInfo: multiFactorInfo,
            #verificationCompleted: verificationCompleted,
            #verificationFailed: verificationFailed,
            #codeSent: codeSent,
            #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
            #autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting,
            #timeout: timeout,
            #forceResendingToken: forceResendingToken,
            #multiFactorSession: multiFactorSession,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> revokeTokenWithAuthorizationCode(
          String? authorizationCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #revokeTokenWithAuthorizationCode,
          [authorizationCode],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [RouteController].
///
/// See the documentation for Mockito's code generation for more information.
class MockRouteController extends _i1.Mock implements _i5.RouteController {
  @override
  _i7.Future<Set<_i6.Routes>> get routeList => (super.noSuchMethod(
        Invocation.getter(#routeList),
        returnValue: _i7.Future<Set<_i6.Routes>>.value(<_i6.Routes>{}),
        returnValueForMissingStub:
            _i7.Future<Set<_i6.Routes>>.value(<_i6.Routes>{}),
      ) as _i7.Future<Set<_i6.Routes>>);

  @override
  set routeList(_i7.Future<Set<_i6.Routes>>? _routeList) => super.noSuchMethod(
        Invocation.setter(
          #routeList,
          _routeList,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.DbAdapterRoute get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeDbAdapterRoute_4(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeDbAdapterRoute_4(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i5.DbAdapterRoute);

  @override
  _i7.Future<Set<_i6.Routes>> getRouteList() => (super.noSuchMethod(
        Invocation.method(
          #getRouteList,
          [],
        ),
        returnValue: _i7.Future<Set<_i6.Routes>>.value(<_i6.Routes>{}),
        returnValueForMissingStub:
            _i7.Future<Set<_i6.Routes>>.value(<_i6.Routes>{}),
      ) as _i7.Future<Set<_i6.Routes>>);

  @override
  String getApiPreferenceFromRouteMode(_i9.RouteMode? mode) =>
      (super.noSuchMethod(
        Invocation.method(
          #getApiPreferenceFromRouteMode,
          [mode],
        ),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.method(
            #getApiPreferenceFromRouteMode,
            [mode],
          ),
        ),
        returnValueForMissingStub: _i8.dummyValue<String>(
          this,
          Invocation.method(
            #getApiPreferenceFromRouteMode,
            [mode],
          ),
        ),
      ) as String);

  @override
  double calculateCostKCal(_i6.Routes? route) => (super.noSuchMethod(
        Invocation.method(
          #calculateCostKCal,
          [route],
        ),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  _i7.Future<Map<String, dynamic>> getPoints(
    _i10.LatLng? initialPoint,
    _i10.LatLng? destination,
    _i11.TransportMode? transportMode,
    _i9.RouteMode? routeMode,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPoints,
          [
            initialPoint,
            destination,
            transportMode,
            routeMode,
          ],
        ),
        returnValue:
            _i7.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i7.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i7.Future<Map<String, dynamic>>);

  @override
  _i7.Future<_i6.Routes> createRoute(
    String? name,
    _i12.Location? start,
    _i12.Location? end,
    _i11.TransportMode? transportMode,
    _i9.RouteMode? routeMode,
    _i13.Vehicle? vehicle,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createRoute,
          [
            name,
            start,
            end,
            transportMode,
            routeMode,
            vehicle,
          ],
        ),
        returnValue: _i7.Future<_i6.Routes>.value(_FakeRoutes_5(
          this,
          Invocation.method(
            #createRoute,
            [
              name,
              start,
              end,
              transportMode,
              routeMode,
              vehicle,
            ],
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i6.Routes>.value(_FakeRoutes_5(
          this,
          Invocation.method(
            #createRoute,
            [
              name,
              start,
              end,
              transportMode,
              routeMode,
              vehicle,
            ],
          ),
        )),
      ) as _i7.Future<_i6.Routes>);

  @override
  _i7.Future<bool> deleteRoute(_i6.Routes? route) => (super.noSuchMethod(
        Invocation.method(
          #deleteRoute,
          [route],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> saveRoute(_i6.Routes? route) => (super.noSuchMethod(
        Invocation.method(
          #saveRoute,
          [route],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> addFav(String? routeName) => (super.noSuchMethod(
        Invocation.method(
          #addFav,
          [routeName],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> removeFav(String? routeName) => (super.noSuchMethod(
        Invocation.method(
          #removeFav,
          [routeName],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
}

/// A class which mocks [DbAdapterRoute].
///
/// See the documentation for Mockito's code generation for more information.
class MockDbAdapterRoute extends _i1.Mock implements _i5.DbAdapterRoute {
  @override
  _i7.Future<bool> saveRoute(_i6.Routes? route) => (super.noSuchMethod(
        Invocation.method(
          #saveRoute,
          [route],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> deleteRoute(_i6.Routes? route) => (super.noSuchMethod(
        Invocation.method(
          #deleteRoute,
          [route],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<Set<_i6.Routes>> getRouteList() => (super.noSuchMethod(
        Invocation.method(
          #getRouteList,
          [],
        ),
        returnValue: _i7.Future<Set<_i6.Routes>>.value(<_i6.Routes>{}),
        returnValueForMissingStub:
            _i7.Future<Set<_i6.Routes>>.value(<_i6.Routes>{}),
      ) as _i7.Future<Set<_i6.Routes>>);

  @override
  _i7.Future<bool> removeFav(String? routeName) => (super.noSuchMethod(
        Invocation.method(
          #removeFav,
          [routeName],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> addFav(String? routeName) => (super.noSuchMethod(
        Invocation.method(
          #addFav,
          [routeName],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
}

/// A class which mocks [DbAdapterUserApp].
///
/// See the documentation for Mockito's code generation for more information.
class MockDbAdapterUserApp extends _i1.Mock implements _i14.DbAdapterUserApp {
  @override
  _i7.Future<_i15.UserApp?> createUser(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUser,
          [
            email,
            password,
          ],
        ),
        returnValue: _i7.Future<_i15.UserApp?>.value(),
        returnValueForMissingStub: _i7.Future<_i15.UserApp?>.value(),
      ) as _i7.Future<_i15.UserApp?>);

  @override
  _i7.Future<_i15.UserApp?> logInCredenciales(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #logInCredenciales,
          [
            email,
            password,
          ],
        ),
        returnValue: _i7.Future<_i15.UserApp?>.value(),
        returnValueForMissingStub: _i7.Future<_i15.UserApp?>.value(),
      ) as _i7.Future<_i15.UserApp?>);

  @override
  _i7.Future<bool> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
}

/// A class which mocks [DbAdapterLocation].
///
/// See the documentation for Mockito's code generation for more information.
class MockDbAdapterLocation extends _i1.Mock implements _i16.DbAdapterLocation {
  @override
  _i7.Future<bool> createLocationFromCoord(_i12.Location? location) =>
      (super.noSuchMethod(
        Invocation.method(
          #createLocationFromCoord,
          [location],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> createLocationFromTopo(_i12.Location? location) =>
      (super.noSuchMethod(
        Invocation.method(
          #createLocationFromTopo,
          [location],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<Set<_i12.Location>> getLocationList() => (super.noSuchMethod(
        Invocation.method(
          #getLocationList,
          [],
        ),
        returnValue: _i7.Future<Set<_i12.Location>>.value(<_i12.Location>{}),
        returnValueForMissingStub:
            _i7.Future<Set<_i12.Location>>.value(<_i12.Location>{}),
      ) as _i7.Future<Set<_i12.Location>>);

  @override
  _i7.Future<bool> addFav(
    String? topo,
    String? alias,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFav,
          [
            topo,
            alias,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> removeFav(
    String? topo,
    String? alias,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFav,
          [
            topo,
            alias,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
}

/// A class which mocks [Electriccarprice].
///
/// See the documentation for Mockito's code generation for more information.
class MockElectriccarprice extends _i1.Mock implements _i17.Electriccarprice {
  @override
  _i7.Future<double> calculatePrice(
    _i6.Routes? route,
    _i13.Vehicle? vehiculo,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #calculatePrice,
          [
            route,
            vehiculo,
          ],
        ),
        returnValue: _i7.Future<double>.value(0.0),
        returnValueForMissingStub: _i7.Future<double>.value(0.0),
      ) as _i7.Future<double>);

  @override
  double convertMWhToKWh(double? pricePerMWh) => (super.noSuchMethod(
        Invocation.method(
          #convertMWhToKWh,
          [pricePerMWh],
        ),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  String getFechaHoy() => (super.noSuchMethod(
        Invocation.method(
          #getFechaHoy,
          [],
        ),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.method(
            #getFechaHoy,
            [],
          ),
        ),
        returnValueForMissingStub: _i8.dummyValue<String>(
          this,
          Invocation.method(
            #getFechaHoy,
            [],
          ),
        ),
      ) as String);

  @override
  double truncarA2Decimales(double? valor) => (super.noSuchMethod(
        Invocation.method(
          #truncarA2Decimales,
          [valor],
        ),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  _i7.Future<double> fetchElectricityPrice() => (super.noSuchMethod(
        Invocation.method(
          #fetchElectricityPrice,
          [],
        ),
        returnValue: _i7.Future<double>.value(0.0),
        returnValueForMissingStub: _i7.Future<double>.value(0.0),
      ) as _i7.Future<double>);
}

/// A class which mocks [DbAdapterVehicle].
///
/// See the documentation for Mockito's code generation for more information.
class MockDbAdapterVehicle extends _i1.Mock implements _i18.DbAdapterVehicle {
  @override
  _i7.Future<bool> createVehicle(_i13.Vehicle? vehicle) => (super.noSuchMethod(
        Invocation.method(
          #createVehicle,
          [vehicle],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<Set<_i13.Vehicle>> getVehicleList() => (super.noSuchMethod(
        Invocation.method(
          #getVehicleList,
          [],
        ),
        returnValue: _i7.Future<Set<_i13.Vehicle>>.value(<_i13.Vehicle>{}),
        returnValueForMissingStub:
            _i7.Future<Set<_i13.Vehicle>>.value(<_i13.Vehicle>{}),
      ) as _i7.Future<Set<_i13.Vehicle>>);

  @override
  _i7.Future<bool> addFav(
    String? numberPlate,
    String? name,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFav,
          [
            numberPlate,
            name,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> removeFav(
    String? numberPlate,
    String? name,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFav,
          [
            numberPlate,
            name,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
}
